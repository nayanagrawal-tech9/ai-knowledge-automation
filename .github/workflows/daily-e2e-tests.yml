name: Daily E2E Test Automation with Allure Reporting

on:
  # Schedule to run daily at 4 PM IST (10:30 AM UTC)
  schedule:
    - cron: '30 10 * * *'
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - login
          - weather-query
          - home-verification

env:
  # Environment variables
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  e2e-tests:
    name: E2E Tests with Allure Reporting
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Install dependencies
      - name: 📦 Install Dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium
          
      # Install Allure CLI
      - name: 🔧 Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          curl -o allure-2.24.0.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          sudo tar -zxvf allure-2.24.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.24.0/bin/allure /usr/bin/allure
          allure --version

      # Set up test environment
      - name: ⚙️ Setup Test Environment
        run: |
          echo "TEST_EMAIL=${{ secrets.TEST_EMAIL }}" >> $GITHUB_ENV
          echo "TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}" >> $GITHUB_ENV
          echo "MASTER_PASSWORD=${{ secrets.MASTER_PASSWORD }}" >> $GITHUB_ENV
          echo "BASE_URL=https://ai-knowledge-chat-ui.vercel.app" >> $GITHUB_ENV
          echo "HEADLESS=true" >> $GITHUB_ENV
          echo "CI=true" >> $GITHUB_ENV

      # Run tests based on input or default to all
      - name: 🧪 Run E2E Tests
        id: run-tests
        run: |
          echo "🚀 Starting E2E Test Execution at $(date)"
          
          # Determine which tests to run
          TEST_SUITE="${{ github.event.inputs.test_suite || 'all' }}"
          
          if [ "$TEST_SUITE" = "login" ]; then
            echo "Running login tests only..."
            npm run test:allure
          elif [ "$TEST_SUITE" = "weather-query" ]; then
            echo "Running weather query tests only..."
            npx playwright test tests/auth/weather-query.spec.ts
          elif [ "$TEST_SUITE" = "home-verification" ]; then
            echo "Running home verification tests only..."
            npx playwright test tests/auth/home-verification.spec.ts
          else
            echo "Running all auth tests..."
            npm run test:auth
          fi
          
          echo "test_status=completed" >> $GITHUB_OUTPUT
        continue-on-error: true

      # Generate Allure Report (both standard and single-file)
      - name: 📊 Generate Allure Report
        if: always()
        run: |
          echo "📊 Generating Allure Report..."
          allure generate allure-results --clean -o allure-report
          echo "✅ Standard Allure report generated successfully"
          
          echo "📄 Generating Complete Self-Contained Allure Report..."
          npm run allure:complete
          echo "✅ Complete self-contained Allure report generated successfully"
          
          # Get test results summary
          if [ -d "allure-results" ]; then
            TOTAL_TESTS=$(find allure-results -name "*-result.json" | wc -l)
            echo "total_tests=$TOTAL_TESTS" >> $GITHUB_ENV
            
            # Count passed/failed tests (simplified)
            PASSED_TESTS=$(grep -l '"status":"passed"' allure-results/*-result.json 2>/dev/null | wc -l || echo "0")
            FAILED_TESTS=$(grep -l '"status":"failed"' allure-results/*-result.json 2>/dev/null | wc -l || echo "0")
            
            echo "passed_tests=$PASSED_TESTS" >> $GITHUB_ENV
            echo "failed_tests=$FAILED_TESTS" >> $GITHUB_ENV
          else
            echo "total_tests=0" >> $GITHUB_ENV
            echo "passed_tests=0" >> $GITHUB_ENV
            echo "failed_tests=0" >> $GITHUB_ENV
          fi

      # Deploy Allure Report to GitHub Pages
      - name: 🚀 Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          destination_dir: allure-reports/${{ github.run_number }}
          keep_files: true

      # Get the deployed report URL
      - name: 🔗 Get Report URL
        if: always()
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/${{ github.run_number }}"
          echo "report_url=$REPORT_URL" >> $GITHUB_ENV
          echo "📊 Allure Report URL: $REPORT_URL"

      # Archive test artifacts
      - name: 📁 Archive Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ github.run_number }}
          path: |
            allure-complete-report.html
            allure-single-report.html
            allure-report/
            allure-results/
            test-results/
            *.png
          retention-days: 30

      # Upload Complete Self-Contained Report as primary artifact
      - name: 📄 Upload Complete Self-Contained Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-complete-report-${{ github.run_number }}
          path: allure-complete-report.html
          retention-days: 90

      # Upload Single-File Report as alternative
      - name: 📄 Upload Single-File Allure Report (Alternative)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-single-file-report-${{ github.run_number }}
          path: allure-single-report.html
          retention-days: 90



  # Cleanup old reports (keep last 10)
  cleanup-reports:
    name: 🧹 Cleanup Old Reports
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          
      - name: 🗑️ Remove Old Reports
        run: |
          if [ -d "allure-reports" ]; then
            cd allure-reports
            # Keep only the latest 10 reports
            ls -1 | sort -n | head -n -10 | xargs -r rm -rf
            echo "✅ Cleaned up old reports, keeping latest 10"
          fi
          
      - name: 📤 Commit Cleanup
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --staged --quiet || git commit -m "🧹 Cleanup old Allure reports"
          git push
